use core::cmp::Ordering;
use rand;
use std::io;
fn main() {
    let sys_number = rand::random_range(0..100);
    println!("System generated number is: {}", sys_number);
    println!(
        "Welcome to the Guessing Game!\n 
    You need to guess the Random Number generated by the Program, between 1 and 100\n
    "
    );
    let mut number_of_tries = 0;
    loop {
        number_of_tries += 1;
        println!("Please enter your guess. ");
        let mut guess = String::new();
        match io::stdin().read_line(&mut guess) {
            Ok(n) => {
                println!("{n} bytes read!");
                println!("Your guess is: {guess}")
            }
            Err(e) => println!("Some error occurred!-{e}"),
        }
        let mut input = 0;
        match guess.trim().parse::<u8>() {
            Ok(n) => {
                println!("Valid Input-{n}");
                input = n;
            }
            Err(e) => println!("Invalid input-{e}"),
        }
        match input.cmp(&sys_number) {
            Ordering::Less => println!("Your guess is less than the answer."),
            Ordering::Greater => println!("Your guess is Greater than the answer."),
            Ordering::Equal => {
                println!("You Won in {number_of_tries} tries!");
                break;
            }
        }
    }
}
